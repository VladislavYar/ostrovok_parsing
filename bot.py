import os
import json

from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, Update
from telegram.ext import (
    Application, CommandHandler, ConversationHandler,
    MessageHandler, ContextTypes, filters
    )


from dotenv import load_dotenv


load_dotenv()


TOKEN_BOT = os.getenv('TOKEN')
INSLAND = 'üèùÔ∏è'
kEYBOARD = [
        ['–î–∞—Ç–∞', '–¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å RUB'],
        ['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π', '–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞'],
        ['–ì–æ—Ä–æ–¥', '–¢–∏–ø —Ä–∞–∑–º–µ—â–µ–Ω–∏—è'],
        ['–í –æ—Ç–µ–ª–µ', '–í –Ω–æ–º–µ—Ä–µ'],
        ['–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è', '–ü–∏—Ç–∞–Ω–∏–µ'],
        ['–û—Ü–µ–Ω–∫–∞ –ø–æ –æ—Ç–∑—ã–≤–∞–º', '–û–ø–ª–∞—Ç–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ'],
        ['–¢–∏–ø –∫—Ä–æ–≤–∞—Ç–µ–π'],
        ['–ü–æ–∏—Å–∫', '–í—ã—Ö–æ–¥'],
    ]

async def filter_select_output(update: Update,
                               context: ContextTypes.DEFAULT_TYPE) -> int:
    """–í—ã–≤–æ–¥–∏—Ç –≤—ã–±–æ—Ä —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return ConversationHandler.END


async def search(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π."""
    return ConversationHandler.END


async def insland(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ù–∞—á–∞–ª–æ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞."""
    text = '–ö–∞–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–¥–∞—Ç—å?'
    markup = ReplyKeyboardMarkup(kEYBOARD, one_time_keyboard=True)
    await update.effective_message.reply_text(text, reply_markup=markup)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å–≤—É–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –∫–Ω–æ–ø–∫—É."""

    button = ReplyKeyboardMarkup(
        [[INSLAND, ]], resize_keyboard=True)
    name = update.message.chat.first_name
    text = (
            f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, {name}! –Ø –±–æ—Ç–æ–≥—Ä–∞–º–º v1.0\n'
            '–ó–∞–Ω–∏–º–∞—é—Å—å –ø–∞—Ä—Å–∏–Ω–≥–æ–º —Å–∞–π—Ç–∞ ostrovok.ru\n'
            '–£–º–µ—é —Ñ–∏–ª—å—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–≤–æ–∏–º –∑–∞–ø—Ä–æ—Å–∞–º'
            '–∏ –≤—ã–≤–æ–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª.\n'
            '–¢–∫–Ω–∏ –≤ –æ—Å—Ç—Ä–æ–≤–æ–∫, –Ω–µ –±–æ–π—Å—è;)'
            )

    await update.effective_message.reply_text(text, reply_markup=button)


def main() -> None:
    """–°—Ç–∞—Ä—Ç –±–æ—Ç–∞."""

    application = Application.builder().token(TOKEN_BOT).build()

    start_filter = filters.Regex(INSLAND)
    search_filter = (
        filters.Regex('–î–∞—Ç–∞') |
        filters.Regex('–¶–µ–Ω–∞ –∑–∞ –Ω–æ—á—å RUB') |
        filters.Regex('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π') |
        filters.Regex('–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞') |
        filters.Regex('–ì–æ—Ä–æ–¥') |
        filters.Regex('–í –æ—Ç–µ–ª–µ') |
        filters.Regex('–í –Ω–æ–º–µ—Ä–µ') |
        filters.Regex('–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è') |
        filters.Regex('–ü–∏—Ç–∞–Ω–∏–µ') |
        filters.Regex('–û—Ü–µ–Ω–∫–∞ –ø–æ –æ—Ç–∑—ã–≤–∞–º') |
        filters.Regex('–û–ø–ª–∞—Ç–∞ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ') |
        filters.Regex('–¢–∏–ø –∫—Ä–æ–≤–∞—Ç–µ–π')
        )

    handler = ConversationHandler(
        entry_points=[CommandHandler("start", start),
                      MessageHandler(start_filter, start)],
        states={
            0: [
                MessageHandler(
                    search_filter, filter_select_output
                ),
            ],
            1: [
                MessageHandler(
                    filters.TEXT & ~(filters.COMMAND | filters.Regex("^Done$")), regular_choice
                )
            ],
            2: [
                MessageHandler(
                    filters.TEXT & ~(filters.COMMAND | filters.Regex("^Done$")),
                    received_information,
                )
            ],
        },
        fallbacks=[MessageHandler(filters.Regex('–ü–æ–∏—Å–∫'), search)],
    )

    application.add_handlers(handler)

    application.run_polling()


if __name__ == "__main__":
    main()
